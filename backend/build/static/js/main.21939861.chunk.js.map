{"version":3,"sources":["logo.svg","MenuBar/MenuBar.js","Transaction/Transaction.js","Category/Category.js","Modal/SplitTransactionModal.js","Reports/Reports.js","App.js","reportWebVitals.js","index.js"],"names":["MenuBar","props","onShowTransactionSection","newState","state","home","hidden","categories","transactions","reports","setStateFunc","onShowCategorySection","onShowReportsSection","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","this","onClick","Component","Transaction","getDefaultStartDate","month","today","Date","getMonth","year","getFullYear","getDefaultEndDate","day","getDate","getTransactions","startDate","endDate","fetch","then","response","json","responseJson","setState","getCategories","onUpdateCategory","transactionId","categoryId","amount","transactionCategoryId","a","undefined","method","headers","body","JSON","stringify","category_id","transaction_id","status","console","log","alert","initialized","refreshTransactions","afterRefreshTransactionsHandler","transactionsJsx","forEach","transaction","categoriesJsx","category","push","value","selected","name","transactionAmount","transaction_amount","transaction_category_id","date","payee","institution_id","onChange","event","target","checknum","memo","sic","mcc","type","Button","variant","showSplitTransactionModalFunc","toString","for","Table","striped","bordered","hover","Category","deleteCategory","createNewCategory","newCategoryName","onNewCategoryNameChange","InputGroup","Form","Control","placeholder","aria-label","aria-describedby","Append","SplitTransactionModal","onAddTransactionCategory","transactionCategories","length","onDeleteTransactionCategory","newTransactionCategories","filter","transactionCategory","index","onUpdateAmount","parseInt","onSave","requestTransactionCategories","map","parseFloat","httpMethod","uri","onCloseModalHandler","message","transactionCategoriesJsx","Modal","show","backdrop","size","onHide","Header","closeButton","Title","Body","Footer","Reports","getReports","getReport","report","blob","file","window","URL","createObjectURL","location","assign","reportOptionsJsx","App","showSplitTransactionModal","splitTransactionModal","hideSplitTransactionModal","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21939861.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nclass MenuBar extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tonShowTransactionSection = () => {\n\t\tlet newState = {...this.props.state};\n\t\tnewState.home.hidden = true;\n\t\tnewState.categories.hidden = true;\n\t\tnewState.transactions.hidden = false;\n\t\tnewState.reports.hidden = true;\n\n\t\tthis.props.setStateFunc(newState);\n\t}\n\n\tonShowCategorySection = () => {\n\t\tlet newState = {...this.props.state};\n\t\tnewState.home.hidden = true;\n\t\tnewState.categories.hidden = false;\n\t\tnewState.transactions.hidden = true;\n\t\tnewState.reports.hidden = true;\n\n\t\tthis.props.setStateFunc(newState);\n\t}\n\n\tonShowReportsSection = () => {\n\t\tlet newState = {...this.props.state};\n\t\tnewState.home.hidden = true;\n\t\tnewState.categories.hidden = true;\n\t\tnewState.transactions.hidden = true;\n\t\tnewState.reports.hidden = false;\n\n\t\tthis.props.setStateFunc(newState);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t                <Navbar.Brand href=\"#\">pb</Navbar.Brand>\n\t                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t                <Navbar.Collapse id=\"basic-navbar-nav\">\n\t                    <Nav className=\"mr-auto\">\n\t                        <Nav.Link className={this.props.state.transactions.hidden ? \"nav-item\" : \"nav-item active\"}\n\t                                  onClick={this.onShowTransactionSection}\n\t                        >\n\t                            Transactions\n\t                        </Nav.Link>\n\t                        <Nav.Link className={this.props.state.categories.hidden ? \"nav-item\": \"nav-item active\"}\n\t                                  onClick={this.onShowCategorySection}\n\t                        >\n\t                            Categories\n\t                        </Nav.Link>\n\n\t                        <Nav.Link className={this.props.state.reports.hidden ? \"nav-item\": \"nav-item active\"}\n\t                                  onClick={this.onShowReportsSection}\n\t                        >\n\t                            Reports\n\t                        </Nav.Link>\n\t                    </Nav>\n\n\n\t{/*                    <Button variant=\"outline-secondary\"\n\t                            onClick={this.props.onSaveQueryHandler}\n\t                    >\n\t                        Save Query\n\t                    </Button>*/}\n\t                </Navbar.Collapse>\n\t            </Navbar>\n            </div>\n    \t)\n\t}\n\n}\n\nexport default MenuBar;","import React, { Component } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport Button from \"react-bootstrap/Button\";\nimport './Transaction.css';\n\n\nclass Transaction extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinitialized: false,\n\t\t\tstartDate: undefined,\n\t\t\tendDate: undefined,\n\t\t\ttransactions: [],\n\t\t\tcategories: []\n\t\t}\n\t}\n\n\t/**\n\t* Get the default start date, which is the first day of the current month.\n\t*/\n\tgetDefaultStartDate = () => {\n\t\tconst today = new Date();\n\n\t\tlet month;\n\t\tif (today.getMonth() + 1 < 10) {\n\t\t\tmonth = `0${today.getMonth() + 1}`;\n\t\t} else {\n\t\t\tmonth = `${today.getMonth() + 1}`;\n\t\t}\n\n\t\tlet day = '01';\n\n\t\tlet year = today.getFullYear();\n\n\t\treturn `${year}-${month}-${day}`;\n\t}\n\n\t/**\n\t* Get the default end date, which is today.\n\t*/\n\tgetDefaultEndDate = () => {\n\t\tconst today = new Date();\n\n\t\tlet month;\n\t\tif (today.getMonth() + 1 < 10) {\n\t\t\tmonth = `0${today.getMonth() + 1}`;\n\t\t} else {\n\t\t\tmonth = `${today.getMonth() + 1}`;\n\t\t}\n\n\t\tlet day;\n\t\tif (today.getDate() < 10) {\n\t\t\tday = `0${today.getDate()}`;\n\t\t} else {\n\t\t\tday = today.getDate();\n\t\t}\n\n\t\tlet year = today.getFullYear();\n\n\t\treturn `${year}-${month}-${day}`;\n\t}\n\n\tgetTransactions = () => {\n\t\tlet startDate;\n\t\tif (this.state.startDate) {\n\t\t\tstartDate = this.state.startDate;\n\t\t} else {\n\t\t\tstartDate = this.getDefaultStartDate();\n\t\t}\n\n\t\tlet endDate;\n\t\tif (this.state.endDate) {\n\t\t\tendDate = this.state.endDate;\n\t\t} else {\n\t\t\tendDate = this.getDefaultEndDate();\n\t\t}\n\n\t\tfetch(\n            `http://localhost:5000/transactions?startDate=${startDate}&endDate=${endDate}`\n\t\t).then(response => response.json())\n\t\t .then(responseJson => {\n\t\t\tlet newState = {...this.state};\n\t\t\tnewState.transactions = responseJson.transactions;\n\t\t\tthis.setState(newState);\n\t\t })\n\t}\n\n\tgetCategories = () => {\n\t\tfetch(\n            'http://localhost:5000/categories'\n\t\t).then(response => response.json())\n\t\t .then(responseJson => {\n\t\t\tlet newState = {...this.state};\n\t\t\tnewState.categories = responseJson;\n\t\t\tthis.setState(newState);\n\t\t })\n\t}\n\n\tonUpdateCategory = async (transactionId, categoryId, amount, transactionCategoryId) => {\n\t\t// Don't do anything if categoryId is null, undefined, or empty string.\n\t\tif (categoryId === undefined || categoryId === null || categoryId === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await fetch(\n\t\t\t`http://localhost:5000/transaction/category/${transactionCategoryId}`,\n\t\t\t{\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: transactionCategoryId, \n\t\t\t\t\t\t\tcategory_id: categoryId,\n\t\t\t\t\t\t\ttransaction_id: transactionId,\n\t\t\t\t\t\t\tamount: amount\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\t\tif (response.status === 200) {\n\t\t\tthis.getTransactions();\n\t\t} else {\n\t\t\tlet responseJson = response.json();\n\t\t\t\n\t\t\tconsole.log(responseJson);\n\n\t\t\talert('There was an error updating the transaction category');\n\t\t}\n\t}\n\n\trender() {\n\t\tif (! this.props.hidden) {\n\t\t\tif (! this.state.initialized) {\n\t\t\t\tthis.getTransactions();\n\t\t\t\tthis.getCategories();\n\t\t\t\t\n\t\t\t\tthis.setState({...this.state, initialized: true})\n\t\t\t}\n\n\t\t\tif (this.props.refreshTransactions) {\n\t\t\t\tthis.getTransactions();\n\t\t\t\tthis.props.afterRefreshTransactionsHandler();\n\t\t\t}\n\t\t}\n\n\t\t// Create transactions JSX.\n\t\tlet transactionsJsx = [];\n\t\tthis.state.transactions.forEach(transaction => {\n\t\t\t// Create categories options JSX.\n\t\t\tlet categoriesJsx = [];\n\t\t\tthis.state.categories.forEach(category => {\n\t\t\t\tcategoriesJsx.push(\n\t\t\t\t\t<option value={category.id} selected={transaction.category_id === category.id}>{category.name}</option>\n\t\t\t\t)\n\t\t\t});\n\n\n\t\t\t// Create transaction row using categories options JSX.\n\t\t\tconst transactionId = transaction.id;\n\t\t\tconst transactionAmount = (transaction.amount) ? transaction.amount : transaction.transaction_amount;\n\t\t\tconst transactionCategoryId = transaction.transaction_category_id;\n\t\t\ttransactionsJsx.push(\n\t\t\t\t<tr key={transaction.id + '-' + transaction.transaction_category_id}>\n\t\t\t\t\t<td hidden>{transaction.id}</td>\n\t\t\t\t\t<td>{transaction.date}</td>\n\t\t\t\t\t<td>{transaction.payee}</td>\n\t\t\t\t\t<td>{transactionAmount}</td>\n\t\t\t\t\t<td>{transaction.institution_id}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select onChange={(event) => this.onUpdateCategory(transactionId, event.target.value, transactionAmount, transactionCategoryId)}>\n\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t{categoriesJsx}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{transaction.checknum}</td>\n\t\t\t\t\t<td>{transaction.memo}</td>\n\t\t\t\t\t<td>{transaction.sic}</td>\n\t\t\t\t\t<td>{transaction.mcc}</td>\n\t\t\t\t\t<td>{transaction.type}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<Button variant=\"outline-secondary\"\n\t\t\t\t\t\t\t\tonClick={() => this.props.showSplitTransactionModalFunc(transactionId, transactionCategoryId)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSplit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div hidden={this.props.hidden.toString() === 'true'}>\n\t\t\t\t<span>\n\t\t\t\t\t<label for=\"fromDate\"\n\t\t\t\t\t>\n\t\t\t\t\t\tFrom\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"date\" \n\t\t\t\t\t\t   id=\"fromDate\"\n\t\t\t\t\t\t   onChange={(event) => this.setState({...this.state, startDate: event.target.value})}\n\t\t\t\t    >\n\t\t\t\t    </input>\n\n\t\t\t\t\t<label for=\"toDate\" \n\t\t\t\t\t       className=\"dates-item\"\n\t\t\t        >\n\t\t\t        \tTo\n\t\t\t        </label>\n\t\t\t\t\t<input type=\"date\" \n\t\t\t\t\t\t   id=\"toDate\"\n\t\t\t\t\t\t   onChange={(event) => this.setState({...this.state, endDate: event.target.value})}\n\t\t\t\t    >\n\t\t\t\t    </input>\n\n\t\t\t\t\t<Button variant=\"outline-primary\"\n\t\t\t\t\t        className=\"dates-item\"\n\t\t\t\t\t\t\tonClick={this.getTransactions}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</span>\n\n\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t<thead>\n\t\t\t\t\t    <tr>\n\t\t\t\t\t      <th hidden>ID</th>\n\t\t\t\t\t      <th>Date</th>\n\t\t\t\t\t      <th>Payee</th>\n\t\t\t\t\t      <th>Amount</th>\n\t\t\t\t\t      <th>Institution ID</th>\n\t\t\t\t\t      <th>Category</th>\n\t\t\t\t\t      <th>Check Num</th>\n\t\t\t\t\t      <th>Memo</th>\n\t\t\t\t\t      <th>Sic</th>\n\t\t\t\t\t      <th>Mcc</th>\n\t\t\t\t\t      <th>Type</th>\n\t\t\t\t\t      <th>Actions</th>\n\t\t\t\t\t    </tr>\n\t\t\t\t\t  </thead>\n\t\t\t\t\t  <tbody>\n\t\t\t\t\t  \t{transactionsJsx}\n\t\t\t\t\t  </tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Transaction;","import React, { Component } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport './Category.css';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form'\n\nclass Category extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinitialized: false,\n\t\t\tcategories: [],\n\t\t\tnewCategoryName: null\n\t\t}\n\t}\n\n\tgetCategories = () => {\n\t\tfetch(\n            'http://localhost:5000/categories'\n\t\t).then(response => response.json())\n\t\t .then(responseJson => {\n\t\t\tlet newState = {...this.state};\n\t\t\tnewState.categories = responseJson;\n\t\t\tthis.setState(newState);\n\t\t })\n\t}\n\n\t// TODO:  Add this function back when you add the ability to change a category name.\n\t// updateCategoryName = async (categoryId, categoryName) => {\n\t// \tconst response = await fetch(\n\t// \t\t'http://localhost:5000/category',\n\t// \t\t{\n\t// \t\t\tmethod: 'POST',\n\t// \t\t\theaders: {\n\t// \t\t\t\t'Content-Type': 'application/json'\n\t// \t\t\t},\n\t// \t\t\tbody: JSON.stringify({\n\t// \t\t\t\tid: categoryId,\n\t// \t\t\t\tname: categoryName\n\t// \t\t\t})\n\t// \t\t}\n\t// \t)\n\n\t// \tif (response.status === 200) {\n\t// \t\tthis.getCategories();\n\t// \t} else {\n\t// \t\tlet responseJson = response.json();\n\t\t\t\n\t// \t\tconsole.log(responseJson);\n\n\t// \t\talert('There was an error updating the category');\n\t// \t}\n\t// }\n\n\tdeleteCategory = async (categoryId) => {\n\t\tconst response = await fetch(\n\t\t\t'http://localhost:5000/category',\n\t\t\t{\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tid: categoryId\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\n\t\tif (response.status === 200) {\n\t\t\tthis.getCategories();\n\t\t} else {\n\t\t\tlet responseJson = response.json();\n\t\t\t\n\t\t\tconsole.log(responseJson);\n\n\t\t\talert('There was an error deleting the category');\n\t\t}\n\t}\n\n\tcreateNewCategory = async () => {\n\t\tlet newCategoryName = this.state.newCategoryName; \n\n\t\tconst response = await fetch(\n\t\t\t'http://localhost:5000/category',\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tid: null,\n\t\t\t\t\tname: newCategoryName\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\n\t\tif (response.status === 201) {\n\t\t\tthis.getCategories();\n\t\t} else {\n\t\t\tlet responseJson = response.json();\n\t\t\t\n\t\t\tconsole.log(responseJson);\n\n\t\t\talert('There was an error saving the category');\n\t\t}\n\t}\n\n\tonNewCategoryNameChange = (name) => {\n\t\tthis.setState({...this.state, newCategoryName: name});\n\t}\n\n\trender() {\n\t\tif (!this.props.hidden) {\n\t\t\tif (!this.state.initialized) {\n\t\t\t\tthis.getCategories();\n\t\t\t\tthis.setState({...this.state, initialized: true});\n\t\t\t}\n\t\t}\n\n\t\t// Categories table rows JSX\n\t\tlet categoriesJsx = []\n\t\tthis.state.categories.forEach(category => {\n\t\t\tconst categoryId = category.id;\n\n\t\t\tcategoriesJsx.push(\n\t\t\t\t<tr key={categoryId}>\n\t\t\t\t\t<td>{categoryId}</td>\n\t\t\t\t\t<td>{category.name}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t    {/*TODO:  Add this function back when you add the ability to change a category name.*/}\n\t\t\t\t\t\t{/*<Button variant=\"secondary\"\n\t\t\t\t\t\t\t\tonClick{(event) => this.updateCategoryName(categoryId, event.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</Button>*/}\n\t\t\t\t\t\t<Button variant=\"danger\"\n\t\t\t\t\t\t        onClick={() => this.deleteCategory(categoryId)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<div hidden={this.props.hidden.toString() === 'true'}>\n\t\t\t\t<InputGroup className=\"add-category-div\">\n\t\t\t\t    <Form.Control\n\t\t\t\t      placeholder=\"Category Name\"\n\t\t\t\t      aria-label=\"Category Name\"\n\t\t\t\t      aria-describedby=\"basic-addon2\"\n\t\t\t\t      onChange={(event) => this.onNewCategoryNameChange(event.target.value)}\n\t\t\t\t    />\n\t\t\t\t    <InputGroup.Append>\n      \t\t\t\t\t<Button variant=\"outline-primary\"\n      \t\t\t\t\t        onClick={this.createNewCategory}\n      \t\t\t\t\t>\n      \t\t\t\t\t\tAdd Category\n      \t\t\t\t\t</Button>\n  \t\t\t\t\t</InputGroup.Append>\n\t\t\t    </InputGroup>\n\t\t\t\t\n\n\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t<thead>\n\t\t\t\t\t    <tr>\n\t\t\t\t\t      <th>ID</th>\n\t\t\t\t\t      <th>Name</th>\n\t\t\t\t\t      <th>Actions</th>\n\t\t\t\t\t    </tr>\n\t\t\t\t\t  </thead>\n\t\t\t\t\t  <tbody>\n\t\t\t\t\t  \t{categoriesJsx}\n\t\t\t\t\t  </tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Category;","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from 'react-bootstrap/Table';\n\nclass SplitTransactionModal extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinitialized: false,\n\t\t\ttransactionId: null,\n\t\t\ttransactionCategoryId: null,\n\t\t\ttransactionCategories: [\n\t\t\t\t{\n\t\t\t\t\tid: 0,\n\t\t\t\t\tcategoryId: null,\n\t\t\t\t\tamount: null\n\t\t\t\t}\n\t\t\t],\n\t\t\tcategories: []\n\t\t};\n\t}\n\n\tgetCategories = () => {\n\t\tfetch(\n            'http://localhost:5000/categories'\n\t\t).then(response => response.json())\n\t\t .then(responseJson => {\n\t\t\tlet newState = {...this.state};\n\t\t\tnewState.categories = responseJson;\n\t\t\tnewState.transactionId = this.props.transactionId;\n\t\t\tnewState.transactionCategoryId = this.props.transactionCategoryId;\n\t\t\tthis.setState(newState);\n\t\t })\n\t}\n\n\tonAddTransactionCategory = () => {\n\t\tlet newState = {...this.state};\n\t\tnewState.transactionCategories.push({\n\t\t\tid: this.state.transactionCategories.length,\n\t\t\tcategoryId: null,\n\t\t\tamount: null\n\t\t})\n\t\tthis.setState(newState);\n\t}\n\n\tonDeleteTransactionCategory = (id) => {\n\t\tlet newState = {...this.state};\n\n\t\tlet newTransactionCategories = newState.transactionCategories.filter(transactionCategory => transactionCategory.id !== id);\n\t\t\n\t\t// Renumber the transaction category IDs.\n\t\tnewTransactionCategories.forEach((transactionCategory, index) => {\n\t\t\ttransactionCategory.id = index;\n\t\t});\n\n\t\tnewState.transactionCategories = newTransactionCategories;\n\n\t\tthis.setState(newState);\n\t}\n\n\tonUpdateAmount = (id, amount) => {\n\t\tlet newState = {...this.state};\n\n\t\tlet transactionCategoryToUpdate = newState.transactionCategories.filter(transactionCategory => transactionCategory.id === id)[0];\n\t\ttransactionCategoryToUpdate.amount = amount;\n\n\t\tthis.setState(newState);\n\t}\n\n\tonUpdateCategory = (id, categoryId) => {\n\t\tif (categoryId === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newState = {...this.state};\n\t\t\n\t\tlet transactionCategoryToUpdate = newState.transactionCategories.filter(transactionCategory => transactionCategory.id === id)[0];\n\t\ttransactionCategoryToUpdate.categoryId = parseInt(categoryId);\n\n\t\tthis.setState(newState);\n\t}\n\n\tonSave = async () => {\n\t\t// First check that all transaction categories do not have nulls, undefined, or empty strings as values.\n\t\tthis.state.transactionCategories.forEach(transactionCategory => {\n\t\t\tif (transactionCategory.categoryId === undefined || transactionCategory.categoryId === null || transactionCategory.categoryId === '') {\n\t\t\t\talert('A transaction category\\'s category is undefined, null, or an empty string.  Please correct this before saving.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (transactionCategory.amount === undefined || transactionCategory.amount === null || transactionCategory.amount === '') {\n\t\t\t\talert('A transaction category\\'s amount is undefined, null, or an empty string.  Please correct this before saving.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\t// Transform the transction categories into the API's expected format.\n\t\tlet requestTransactionCategories = this.state.transactionCategories.map(transactionCategory => {\n\t\t\treturn {\n\t\t\t\tid: this.state.transactionCategoryId,\n\t\t\t\tcategory_id: transactionCategory.categoryId,\n\t\t\t\ttransaction_id: this.state.transactionId,\n\t\t\t\tamount: parseFloat(transactionCategory.amount)\n\t\t\t}\n\t\t});\n\n\t\t// Save all transaction categories.\n\t\tlet httpMethod;\n\t\tlet uri;\n\t\tif (this.state.transactionId && ! this.state.transactionCategoryId) {\n\t\t\thttpMethod = 'POST';\n\t\t\turi = 'http://localhost:5000/transaction/category';\n\t\t} else {\n\t\t\thttpMethod = 'PUT';\n\t\t\turi = `http://localhost:5000/transaction/category/${this.state.transactionCategoryId}`;\n\t\t}\n\n\t\tconst response = await fetch(\n\t\t\turi,\n\t\t\t{\n\t\t\t\tmethod: httpMethod,\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(requestTransactionCategories)\n\t\t\t}\n\t\t)\n\n\t\tif (response.status === 200) {\n\t\t\tthis.props.onCloseModalHandler();\n\t\t} else {\n\t\t\tlet responseJson = await response.json();\n\t\t\tconsole.log(responseJson);\n\n\t\t\tlet message = responseJson.message;\n\t\t\talert(message);\n\t\t}\n\t}\n\n\trender() {\n\t\tif (! this.props.hidden) {\n\t\t\tif (! this.state.initialized) {\n\t\t\t\tthis.getCategories();\n\t\t\t\tlet newState = {...this.state, initialized: true}\n\t\t\t\tthis.setState(newState);\n\t\t\t}\n\t\t}\n\n\t\t// Create transaction category JSX.\n\t\tlet transactionCategoriesJsx = [];\n\t\tthis.state.transactionCategories.forEach(transactionCategory => {\n\n\t\t\t// Create categories JSX.\n\t\t\tlet categoriesJsx = [];\n\n\t\t\t// Creat the default blank option.\n\t\t\tcategoriesJsx.push(\n\t\t\t\t<option value=\"\"></option>\n\t\t\t);\n\n\t\t\tthis.state.categories.forEach(category => {\n\t\t\t\tcategoriesJsx.push(\n\t\t\t\t\t<option value={category.id} selected={transactionCategory.categoryId === category.id}>{category.name}</option>\n\t\t\t\t)\n\t\t\t});\n\n\t\t\tlet transactionCategoryId = transactionCategory.id;\n\t\t\ttransactionCategoriesJsx.push(\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select onChange={(event) => this.onUpdateCategory(transactionCategoryId, event.target.value)}>\n\t\t\t\t\t\t\t{categoriesJsx}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input value={transactionCategory.amount}\n\t\t\t\t\t\t\t   onChange={(event) => this.onUpdateAmount(transactionCategoryId, event.target.value)}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<Button variant=\"outline-danger\"\n\t\t\t\t\t\t\t    onClick={() => this.onDeleteTransactionCategory(transactionCategoryId)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<Modal show={! this.props.hidden} backdrop='static' size=\"lg\" onHide={this.props.onCloseModalHandler}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t        <Modal.Title>Split Transaction Categories</Modal.Title>\n\t\t\t    </Modal.Header>\n\n\t\t\t    <Modal.Body>\n\t\t\t    \t<Button variant=\"outline-primary\"\n\t\t\t    \t\t\tonClick={this.onAddTransactionCategory}\n\t\t\t    \t>\n\t\t\t    \t\t+\n\t\t    \t\t</Button>\n\n\t\t\t    \t<Table striped bordered hover>\n\t\t\t    \t\t<thead>\n\t\t\t    \t\t\t<tr>\n\t\t\t    \t\t\t\t<th>Category</th>\n\t\t\t    \t\t\t\t<th>Amount</th>\n\t\t\t    \t\t\t\t<th>Actions</th>\n\t\t\t    \t\t\t</tr>\n\t\t\t    \t\t</thead>\n\t\t\t    \t\t<tbody>\n\t\t\t    \t\t\t{transactionCategoriesJsx}\n\t\t\t    \t\t</tbody>\n\t\t\t    \t</Table>\n\t\t\t    </Modal.Body>\n\n\t\t\t    <Modal.Footer>\n\t\t\t    \t<Button variant=\"outline-secondary\" onClick={this.props.onCloseModalHandler}>\n\t\t\t        \tClose\n\t\t\t        </Button>\n\t\t\t        <Button variant=\"outline-primary\" onClick={this.onSave}>\n\t\t\t            Save\n\t\t\t        </Button>\n\t\t\t    </Modal.Footer>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n}\n\nexport default SplitTransactionModal;","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\n\nclass Reports extends Component {\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\treport: null,\n\t\t\treports: [],\n\t\t\tinitialized: false\n\t\t};\n\t}\n\n\tgetReports = () => {\n\t\tfetch(\n\t\t\t'http://localhost:5000/reports'\n\t\t).then(response => response.json())\n\t\t.then(responseJson => {\n\t\t\tlet newState = {...this.state};\n\t\t\tnewState.reports = responseJson;\n\t\t\tthis.setState(newState);\n\t\t})\n\t}\n\n\tgetReport = () => {\n\t\t// todo:  parameterize the report name from the API config.\n\t\tfetch(\n            `http://localhost:5000/report/${this.state.report}?startDate=${this.state.startDate}&endDate=${this.state.endDate}`\n\t\t).then(response => response.blob())\n\t\t .then(blob => {\n\t\t\tconst file = window.URL.createObjectURL(blob);\n    \t\twindow.location.assign(file);\n\t\t })\n\t}\n\n\trender() {\n\t\tif (!this.props.hidden) {\n\t\t\tif (!this.state.initialized) {\n\t\t\t\tthis.getReports();\n\t\t\t\tthis.setState({...this.state, initialized: true});\n\t\t\t}\n\t\t}\n\n\t\tlet reportOptionsJsx = [];\n\t\t// Default empty option.\n\t\treportOptionsJsx.push(\n\t\t\t<option selected></option>\n\t\t);\n\t\tthis.state.reports.forEach(report => {\n\t\t\treportOptionsJsx.push(\n\t\t\t\t<option value={report.name}>{report.name}</option>\n\t\t\t);\n\t\t})\n\n\t\treturn (\n\t\t\t<div hidden={this.props.hidden.toString() === 'true'}>\n\t\t\t\t<span>\n\t\t\t\t\t<label for=\"report\"\n\t\t\t\t\t>\n\t\t\t\t\t\tReport\n\t\t\t\t\t</label>\n\t\t\t\t\t<select id=\"report\"\n \t\t\t\t\t\t\tonChange={(event) => this.setState({...this.state, report: event.target.value})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{reportOptionsJsx}\n\t\t\t\t\t</select>\n\n\t\t\t\t\t<label for=\"fromDate\"\n\t\t\t\t\t       className=\"dates-item\"\n\t\t\t\t\t>\n\t\t\t\t\t\tFrom\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"date\" \n\t\t\t\t\t\t   id=\"fromDate\"\n\t\t\t\t\t\t   onChange={(event) => this.setState({...this.state, startDate: event.target.value})}\n\t\t\t\t    >\n\t\t\t\t    </input>\n\n\t\t\t\t\t<label for=\"toDate\" \n\t\t\t\t\t       className=\"dates-item\"\n\t\t\t        >\n\t\t\t        \tTo\n\t\t\t        </label>\n\t\t\t\t\t<input type=\"date\" \n\t\t\t\t\t\t   id=\"toDate\"\n\t\t\t\t\t\t   onChange={(event) => this.setState({...this.state, endDate: event.target.value})}\n\t\t\t\t    >\n\t\t\t\t    </input>\n\n\t\t\t\t\t<Button variant=\"outline-primary\"\n\t\t\t\t\t        className=\"dates-item\"\n\t\t\t\t\t\t\tonClick={this.getReport}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Reports;","import logo from './logo.svg';\nimport './App.css';\nimport MenuBar from \"./MenuBar/MenuBar\";\nimport React, { Component } from \"react\";\nimport Transaction from \"./Transaction/Transaction\";\nimport Category from \"./Category/Category\";\nimport SplitTransactionModal from \"./Modal/SplitTransactionModal\";\nimport Reports from \"./Reports/Reports\";\n\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n          home: {\n            hidden: false\n          },\n          transactions: {\n            hidden: true,\n            refreshTransactions: false\n          },\n          categories: {\n            hidden: true\n          },\n          splitTransactionModal: {\n            hidden: true,\n            transactionId: null,\n            transactionCategoryId: null\n          },\n          reports: {\n            hidden: true\n          }\n        }\n\n        this.showSplitTransactionModal = this.showSplitTransactionModal.bind(this);\n        this.hideSplitTransactionModal = this.hideSplitTransactionModal.bind(this);\n        this.afterRefreshTransactionsHandler = this.afterRefreshTransactionsHandler.bind(this);\n    }\n\n    showSplitTransactionModal = (transactionId, transactionCategoryId) => {\n      let newState = {...this.state};\n      newState.splitTransactionModal.hidden = false;\n      newState.splitTransactionModal.transactionId = transactionId;\n      newState.splitTransactionModal.transactionCategoryId = transactionCategoryId;\n\n      newState.transactions.hidden = true;\n\n      this.setState(newState);\n    }\n\n    hideSplitTransactionModal = () => {\n      let newState = {...this.state};\n      newState.splitTransactionModal.hidden = true;\n      newState.splitTransactionModal.transactionId = null;\n      newState.splitTransactionModal.transactionCategoryId = null;\n\n      newState.transactions.hidden = false;\n      newState.transactions.refreshTransactions = true;\n\n      this.setState(newState);\n    }\n\n    afterRefreshTransactionsHandler = () => {\n      let newState = {...this.state};\n      newState.transactions.refreshTransactions = false;\n\n      this.setState(newState);\n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n          <MenuBar setStateFunc={newState => this.setState(newState)}\n                   state={this.state}\n          />\n\n          <Transaction hidden={this.state.transactions.hidden}\n                       showSplitTransactionModalFunc={(transactionId, transactionCategoryId) => this.showSplitTransactionModal(transactionId, transactionCategoryId)}\n                       refreshTransactions={this.state.transactions.refreshTransactions}\n                       afterRefreshTransactionsHandler={this.afterRefreshTransactionsHandler}\n          />\n\n          <Category hidden={this.state.categories.hidden}\n          />\n\n          <SplitTransactionModal hidden={this.state.splitTransactionModal.hidden}\n                                 transactionId={this.state.splitTransactionModal.transactionId}\n                                 transactionCategoryId={this.state.splitTransactionModal.transactionCategoryId}\n                                 onCloseModalHandler={this.hideSplitTransactionModal}\n          />\n\n          <Reports hidden={this.state.reports.hidden}\n          />\n        </div>\n      );\n    }\n\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}